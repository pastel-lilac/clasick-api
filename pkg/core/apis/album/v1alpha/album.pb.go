// Code generated by protoc-gen-go. DO NOT EDIT.
// source: album/v1alpha/album.proto

package v1alpha

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1alpha "github.com/pastel-lilac/clasick-api/pkg/core/apis/common/v1alpha"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Album struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	JacketPhoto          string   `protobuf:"bytes,3,opt,name=jacket_photo,json=jacketPhoto,proto3" json:"jacket_photo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Album) Reset()         { *m = Album{} }
func (m *Album) String() string { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()    {}
func (*Album) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d9052fadd4764c5, []int{0}
}

func (m *Album) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Album.Unmarshal(m, b)
}
func (m *Album) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Album.Marshal(b, m, deterministic)
}
func (m *Album) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Album.Merge(m, src)
}
func (m *Album) XXX_Size() int {
	return xxx_messageInfo_Album.Size(m)
}
func (m *Album) XXX_DiscardUnknown() {
	xxx_messageInfo_Album.DiscardUnknown(m)
}

var xxx_messageInfo_Album proto.InternalMessageInfo

func (m *Album) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Album) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Album) GetJacketPhoto() string {
	if m != nil {
		return m.JacketPhoto
	}
	return ""
}

type AlbumResponse struct {
	Albums               []*Album `protobuf:"bytes,1,rep,name=albums,proto3" json:"albums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlbumResponse) Reset()         { *m = AlbumResponse{} }
func (m *AlbumResponse) String() string { return proto.CompactTextString(m) }
func (*AlbumResponse) ProtoMessage()    {}
func (*AlbumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d9052fadd4764c5, []int{1}
}

func (m *AlbumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlbumResponse.Unmarshal(m, b)
}
func (m *AlbumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlbumResponse.Marshal(b, m, deterministic)
}
func (m *AlbumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlbumResponse.Merge(m, src)
}
func (m *AlbumResponse) XXX_Size() int {
	return xxx_messageInfo_AlbumResponse.Size(m)
}
func (m *AlbumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AlbumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AlbumResponse proto.InternalMessageInfo

func (m *AlbumResponse) GetAlbums() []*Album {
	if m != nil {
		return m.Albums
	}
	return nil
}

// --- [GET] /albums/:artist_id --- //
type GetArtistAlbumsRequest struct {
	Field                *v1alpha.MustField `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	ArtistId             uint32             `protobuf:"varint,2,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetArtistAlbumsRequest) Reset()         { *m = GetArtistAlbumsRequest{} }
func (m *GetArtistAlbumsRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtistAlbumsRequest) ProtoMessage()    {}
func (*GetArtistAlbumsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7d9052fadd4764c5, []int{2}
}

func (m *GetArtistAlbumsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtistAlbumsRequest.Unmarshal(m, b)
}
func (m *GetArtistAlbumsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtistAlbumsRequest.Marshal(b, m, deterministic)
}
func (m *GetArtistAlbumsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtistAlbumsRequest.Merge(m, src)
}
func (m *GetArtistAlbumsRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtistAlbumsRequest.Size(m)
}
func (m *GetArtistAlbumsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtistAlbumsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtistAlbumsRequest proto.InternalMessageInfo

func (m *GetArtistAlbumsRequest) GetField() *v1alpha.MustField {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *GetArtistAlbumsRequest) GetArtistId() uint32 {
	if m != nil {
		return m.ArtistId
	}
	return 0
}

func init() {
	proto.RegisterType((*Album)(nil), "v1alpha.Album")
	proto.RegisterType((*AlbumResponse)(nil), "v1alpha.AlbumResponse")
	proto.RegisterType((*GetArtistAlbumsRequest)(nil), "v1alpha.GetArtistAlbumsRequest")
}

func init() { proto.RegisterFile("album/v1alpha/album.proto", fileDescriptor_7d9052fadd4764c5) }

var fileDescriptor_7d9052fadd4764c5 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4f, 0xc2, 0x30,
	0x14, 0xc6, 0x1d, 0x08, 0xc2, 0x43, 0x30, 0xe9, 0x81, 0x4c, 0x38, 0x88, 0x3b, 0x98, 0x5d, 0x58,
	0x23, 0x1e, 0x3c, 0x1a, 0x34, 0xd1, 0x98, 0xa8, 0x21, 0x3d, 0x19, 0x2f, 0xa4, 0x74, 0x15, 0x2a,
	0xdd, 0x5a, 0xd7, 0xce, 0xbf, 0xdf, 0xac, 0x5d, 0x96, 0x48, 0xbc, 0xed, 0x7d, 0xdf, 0xb7, 0xef,
	0xfd, 0x9a, 0x07, 0xe7, 0x54, 0x6e, 0xca, 0x0c, 0xff, 0x5c, 0x53, 0xa9, 0x77, 0x14, 0xbb, 0x29,
	0xd1, 0x85, 0xb2, 0x0a, 0x9d, 0xd4, 0xe2, 0x64, 0xca, 0x54, 0x96, 0xa9, 0xbc, 0x09, 0xf9, 0xd1,
	0xa7, 0xa2, 0x37, 0xe8, 0x2c, 0xab, 0x9f, 0xd0, 0x08, 0x5a, 0x22, 0x0d, 0x83, 0x59, 0x10, 0x0f,
	0x49, 0x4b, 0xa4, 0x08, 0xc1, 0x71, 0x4e, 0x33, 0x1e, 0xb6, 0x66, 0x41, 0xdc, 0x27, 0xee, 0x1b,
	0x5d, 0xc2, 0xe9, 0x17, 0x65, 0x7b, 0x6e, 0xd7, 0x7a, 0xa7, 0xac, 0x0a, 0xdb, 0xce, 0x1b, 0x78,
	0x6d, 0x55, 0x49, 0xd1, 0x2d, 0x0c, 0x5d, 0x1f, 0xe1, 0x46, 0xab, 0xdc, 0x70, 0x74, 0x05, 0x5d,
	0x47, 0x65, 0xc2, 0x60, 0xd6, 0x8e, 0x07, 0x8b, 0x51, 0x52, 0x73, 0x24, 0x3e, 0x57, 0xbb, 0xd1,
	0x1a, 0xc6, 0x4f, 0xdc, 0x2e, 0x0b, 0x2b, 0x8c, 0x75, 0x8e, 0x21, 0xfc, 0xbb, 0xe4, 0xc6, 0xa2,
	0x18, 0x3a, 0x9f, 0x82, 0x4b, 0x0f, 0x37, 0x58, 0xa0, 0xa6, 0xe0, 0xb5, 0x34, 0xf6, 0xb1, 0x72,
	0x88, 0x0f, 0xa0, 0x29, 0xf4, 0xa9, 0x2b, 0x58, 0x8b, 0xd4, 0x81, 0x0f, 0x49, 0xcf, 0x0b, 0xcf,
	0xe9, 0xe2, 0x1d, 0x7a, 0x7e, 0xe3, 0xea, 0x01, 0xbd, 0xc0, 0xd9, 0xc1, 0x32, 0x74, 0xd1, 0xd4,
	0xfe, 0x8f, 0x31, 0x19, 0x1f, 0x80, 0xd7, 0x0f, 0x8c, 0x8e, 0xee, 0x97, 0x1f, 0x77, 0x5b, 0x61,
	0x77, 0xe5, 0x26, 0x61, 0x2a, 0xc3, 0x9a, 0x1a, 0xcb, 0xe5, 0x5c, 0x0a, 0x49, 0x19, 0x66, 0x92,
	0x1a, 0xc1, 0xf6, 0x73, 0xaa, 0x05, 0xd6, 0xfb, 0x2d, 0x66, 0xaa, 0xe0, 0x98, 0x6a, 0x61, 0xf0,
	0x9f, 0xc3, 0x6d, 0xba, 0xee, 0x1a, 0x37, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x37, 0x50, 0x08,
	0xec, 0xd0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AlbumRPCClient is the client API for AlbumRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AlbumRPCClient interface {
	GetArtistAlbums(ctx context.Context, in *GetArtistAlbumsRequest, opts ...grpc.CallOption) (*AlbumResponse, error)
}

type albumRPCClient struct {
	cc *grpc.ClientConn
}

func NewAlbumRPCClient(cc *grpc.ClientConn) AlbumRPCClient {
	return &albumRPCClient{cc}
}

func (c *albumRPCClient) GetArtistAlbums(ctx context.Context, in *GetArtistAlbumsRequest, opts ...grpc.CallOption) (*AlbumResponse, error) {
	out := new(AlbumResponse)
	err := c.cc.Invoke(ctx, "/v1alpha.AlbumRPC/GetArtistAlbums", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AlbumRPCServer is the server API for AlbumRPC service.
type AlbumRPCServer interface {
	GetArtistAlbums(context.Context, *GetArtistAlbumsRequest) (*AlbumResponse, error)
}

// UnimplementedAlbumRPCServer can be embedded to have forward compatible implementations.
type UnimplementedAlbumRPCServer struct {
}

func (*UnimplementedAlbumRPCServer) GetArtistAlbums(ctx context.Context, req *GetArtistAlbumsRequest) (*AlbumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtistAlbums not implemented")
}

func RegisterAlbumRPCServer(s *grpc.Server, srv AlbumRPCServer) {
	s.RegisterService(&_AlbumRPC_serviceDesc, srv)
}

func _AlbumRPC_GetArtistAlbums_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtistAlbumsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlbumRPCServer).GetArtistAlbums(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1alpha.AlbumRPC/GetArtistAlbums",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlbumRPCServer).GetArtistAlbums(ctx, req.(*GetArtistAlbumsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlbumRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1alpha.AlbumRPC",
	HandlerType: (*AlbumRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArtistAlbums",
			Handler:    _AlbumRPC_GetArtistAlbums_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "album/v1alpha/album.proto",
}
