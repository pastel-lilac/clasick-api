// Code generated by protoc-gen-go. DO NOT EDIT.
// source: playlist/v1alpha/playlist.proto

package v1alpha

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v1alpha "github.com/pastel-lilac/clasick-api/pkg/core/apis/common/v1alpha"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Playlist struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	JacketPhoto          string               `protobuf:"bytes,3,opt,name=jacket_photo,json=jacketPhoto,proto3" json:"jacket_photo,omitempty"`
	CreatedDate          *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	UpdatedDate          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_date,json=updatedDate,proto3" json:"updated_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Playlist) Reset()         { *m = Playlist{} }
func (m *Playlist) String() string { return proto.CompactTextString(m) }
func (*Playlist) ProtoMessage()    {}
func (*Playlist) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0871544eb3ea6f, []int{0}
}

func (m *Playlist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Playlist.Unmarshal(m, b)
}
func (m *Playlist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Playlist.Marshal(b, m, deterministic)
}
func (m *Playlist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Playlist.Merge(m, src)
}
func (m *Playlist) XXX_Size() int {
	return xxx_messageInfo_Playlist.Size(m)
}
func (m *Playlist) XXX_DiscardUnknown() {
	xxx_messageInfo_Playlist.DiscardUnknown(m)
}

var xxx_messageInfo_Playlist proto.InternalMessageInfo

func (m *Playlist) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Playlist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Playlist) GetJacketPhoto() string {
	if m != nil {
		return m.JacketPhoto
	}
	return ""
}

func (m *Playlist) GetCreatedDate() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedDate
	}
	return nil
}

func (m *Playlist) GetUpdatedDate() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedDate
	}
	return nil
}

type PlaylistResponse struct {
	Playlists            []*Playlist `protobuf:"bytes,1,rep,name=playlists,proto3" json:"playlists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PlaylistResponse) Reset()         { *m = PlaylistResponse{} }
func (m *PlaylistResponse) String() string { return proto.CompactTextString(m) }
func (*PlaylistResponse) ProtoMessage()    {}
func (*PlaylistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0871544eb3ea6f, []int{1}
}

func (m *PlaylistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistResponse.Unmarshal(m, b)
}
func (m *PlaylistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistResponse.Marshal(b, m, deterministic)
}
func (m *PlaylistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistResponse.Merge(m, src)
}
func (m *PlaylistResponse) XXX_Size() int {
	return xxx_messageInfo_PlaylistResponse.Size(m)
}
func (m *PlaylistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistResponse proto.InternalMessageInfo

func (m *PlaylistResponse) GetPlaylists() []*Playlist {
	if m != nil {
		return m.Playlists
	}
	return nil
}

// --- [GET] /playlists --- //
type GetPlaylistsRequest struct {
	Field                *v1alpha.MustField `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetPlaylistsRequest) Reset()         { *m = GetPlaylistsRequest{} }
func (m *GetPlaylistsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlaylistsRequest) ProtoMessage()    {}
func (*GetPlaylistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0871544eb3ea6f, []int{2}
}

func (m *GetPlaylistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlaylistsRequest.Unmarshal(m, b)
}
func (m *GetPlaylistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlaylistsRequest.Marshal(b, m, deterministic)
}
func (m *GetPlaylistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlaylistsRequest.Merge(m, src)
}
func (m *GetPlaylistsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlaylistsRequest.Size(m)
}
func (m *GetPlaylistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlaylistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlaylistsRequest proto.InternalMessageInfo

func (m *GetPlaylistsRequest) GetField() *v1alpha.MustField {
	if m != nil {
		return m.Field
	}
	return nil
}

// --- [GET] /playlists/me --- //
type GetMyPlaylistsRequest struct {
	Field                *v1alpha.MustField `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetMyPlaylistsRequest) Reset()         { *m = GetMyPlaylistsRequest{} }
func (m *GetMyPlaylistsRequest) String() string { return proto.CompactTextString(m) }
func (*GetMyPlaylistsRequest) ProtoMessage()    {}
func (*GetMyPlaylistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c0871544eb3ea6f, []int{3}
}

func (m *GetMyPlaylistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMyPlaylistsRequest.Unmarshal(m, b)
}
func (m *GetMyPlaylistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMyPlaylistsRequest.Marshal(b, m, deterministic)
}
func (m *GetMyPlaylistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMyPlaylistsRequest.Merge(m, src)
}
func (m *GetMyPlaylistsRequest) XXX_Size() int {
	return xxx_messageInfo_GetMyPlaylistsRequest.Size(m)
}
func (m *GetMyPlaylistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMyPlaylistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMyPlaylistsRequest proto.InternalMessageInfo

func (m *GetMyPlaylistsRequest) GetField() *v1alpha.MustField {
	if m != nil {
		return m.Field
	}
	return nil
}

func init() {
	proto.RegisterType((*Playlist)(nil), "v1alpha.Playlist")
	proto.RegisterType((*PlaylistResponse)(nil), "v1alpha.PlaylistResponse")
	proto.RegisterType((*GetPlaylistsRequest)(nil), "v1alpha.GetPlaylistsRequest")
	proto.RegisterType((*GetMyPlaylistsRequest)(nil), "v1alpha.GetMyPlaylistsRequest")
}

func init() { proto.RegisterFile("playlist/v1alpha/playlist.proto", fileDescriptor_0c0871544eb3ea6f) }

var fileDescriptor_0c0871544eb3ea6f = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0x4d, 0x8f, 0x93, 0x40,
	0x18, 0x96, 0xee, 0xae, 0xee, 0x0e, 0xeb, 0x46, 0xc7, 0x98, 0x20, 0x1a, 0x8b, 0x9c, 0xb8, 0x94,
	0x89, 0x78, 0x36, 0xc6, 0xb6, 0xb1, 0x27, 0x12, 0x42, 0x3c, 0x79, 0x69, 0xa6, 0xc3, 0x5b, 0x3a,
	0x76, 0x60, 0x46, 0x66, 0x30, 0xe9, 0x6f, 0xf2, 0xc7, 0xf8, 0x97, 0x0c, 0x9f, 0xb5, 0xd6, 0x68,
	0xb2, 0x37, 0x78, 0xbe, 0xf2, 0xbc, 0x0f, 0xa0, 0xa9, 0x12, 0xf4, 0x20, 0xb8, 0x36, 0xe4, 0xfb,
	0x5b, 0x2a, 0xd4, 0x8e, 0x92, 0x01, 0x08, 0x55, 0x25, 0x8d, 0xc4, 0x8f, 0x7a, 0xdc, 0x9d, 0xe6,
	0x52, 0xe6, 0x02, 0x48, 0x0b, 0x6f, 0xea, 0x2d, 0x31, 0xbc, 0x00, 0x6d, 0x68, 0xa1, 0x3a, 0xa5,
	0xfb, 0x92, 0xc9, 0xa2, 0x90, 0xe5, 0x18, 0xd4, 0xbd, 0x76, 0xa4, 0xff, 0xd3, 0x42, 0xd7, 0x49,
	0x9f, 0x8c, 0xef, 0xd0, 0x84, 0x67, 0x8e, 0xe5, 0x59, 0xc1, 0xe3, 0x74, 0xc2, 0x33, 0x8c, 0xd1,
	0x65, 0x49, 0x0b, 0x70, 0x26, 0x9e, 0x15, 0xdc, 0xa4, 0xed, 0x33, 0x7e, 0x83, 0x6e, 0xbf, 0x52,
	0xb6, 0x07, 0xb3, 0x56, 0x3b, 0x69, 0xa4, 0x73, 0xd1, 0x72, 0x76, 0x87, 0x25, 0x0d, 0x84, 0xdf,
	0xa3, 0x5b, 0x56, 0x01, 0x35, 0x90, 0xad, 0x33, 0x6a, 0xc0, 0xb9, 0xf4, 0xac, 0xc0, 0x8e, 0xdc,
	0xb0, 0x2b, 0x1a, 0x0e, 0x45, 0xc3, 0xcf, 0x43, 0xd1, 0xd4, 0xee, 0xf5, 0x4b, 0x6a, 0xa0, 0xb1,
	0xd7, 0x2a, 0x3b, 0xda, 0xaf, 0xfe, 0x6f, 0xef, 0xf5, 0x8d, 0xdd, 0x5f, 0xa0, 0x27, 0xc3, 0x41,
	0x29, 0x68, 0x25, 0x4b, 0x0d, 0x98, 0xa0, 0x9b, 0x61, 0x3e, 0xed, 0x58, 0xde, 0x45, 0x60, 0x47,
	0x4f, 0xc3, 0x7e, 0x8f, 0x70, 0x54, 0x1f, 0x35, 0xfe, 0x07, 0xf4, 0x6c, 0x05, 0x66, 0x60, 0x74,
	0x0a, 0xdf, 0x6a, 0xd0, 0x06, 0x07, 0xe8, 0x6a, 0xcb, 0x41, 0x74, 0x1b, 0xd9, 0x11, 0x1e, 0x33,
	0xe2, 0x5a, 0x9b, 0x4f, 0x0d, 0x93, 0x76, 0x02, 0xff, 0x23, 0x7a, 0xbe, 0x02, 0x13, 0x1f, 0xee,
	0x1f, 0x11, 0xfd, 0xb0, 0xd0, 0x75, 0x5c, 0x6b, 0xce, 0xd2, 0x64, 0x81, 0x93, 0xd3, 0x42, 0xf3,
	0xc3, 0x0a, 0xca, 0x0a, 0xf0, 0xab, 0xd1, 0xfe, 0x97, 0xba, 0xee, 0x8b, 0xf3, 0x1b, 0xfb, 0x45,
	0xfc, 0x07, 0x38, 0x46, 0x77, 0xa7, 0x0d, 0xf1, 0xeb, 0xdf, 0xc3, 0xce, 0xab, 0xff, 0x33, 0x6e,
	0xbe, 0xfc, 0x32, 0xcf, 0xb9, 0xd9, 0xd5, 0x9b, 0x90, 0xc9, 0x82, 0x28, 0xaa, 0x0d, 0x88, 0x99,
	0xe0, 0x82, 0x32, 0xc2, 0x04, 0xd5, 0x9c, 0xed, 0x67, 0x54, 0x71, 0xa2, 0xf6, 0x39, 0x61, 0xb2,
	0x02, 0x42, 0x15, 0xd7, 0xe4, 0xcf, 0x9f, 0x7c, 0xf3, 0xb0, 0xfd, 0xba, 0xef, 0x7e, 0x05, 0x00,
	0x00, 0xff, 0xff, 0xec, 0x19, 0xe0, 0x98, 0xff, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MusicRPCClient is the client API for MusicRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MusicRPCClient interface {
	GetPlaylistsByGenre(ctx context.Context, in *GetPlaylistsRequest, opts ...grpc.CallOption) (*PlaylistResponse, error)
	GetMyPlaylists(ctx context.Context, in *GetMyPlaylistsRequest, opts ...grpc.CallOption) (*PlaylistResponse, error)
}

type musicRPCClient struct {
	cc *grpc.ClientConn
}

func NewMusicRPCClient(cc *grpc.ClientConn) MusicRPCClient {
	return &musicRPCClient{cc}
}

func (c *musicRPCClient) GetPlaylistsByGenre(ctx context.Context, in *GetPlaylistsRequest, opts ...grpc.CallOption) (*PlaylistResponse, error) {
	out := new(PlaylistResponse)
	err := c.cc.Invoke(ctx, "/v1alpha.MusicRPC/GetPlaylistsByGenre", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *musicRPCClient) GetMyPlaylists(ctx context.Context, in *GetMyPlaylistsRequest, opts ...grpc.CallOption) (*PlaylistResponse, error) {
	out := new(PlaylistResponse)
	err := c.cc.Invoke(ctx, "/v1alpha.MusicRPC/GetMyPlaylists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MusicRPCServer is the server API for MusicRPC service.
type MusicRPCServer interface {
	GetPlaylistsByGenre(context.Context, *GetPlaylistsRequest) (*PlaylistResponse, error)
	GetMyPlaylists(context.Context, *GetMyPlaylistsRequest) (*PlaylistResponse, error)
}

// UnimplementedMusicRPCServer can be embedded to have forward compatible implementations.
type UnimplementedMusicRPCServer struct {
}

func (*UnimplementedMusicRPCServer) GetPlaylistsByGenre(ctx context.Context, req *GetPlaylistsRequest) (*PlaylistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlaylistsByGenre not implemented")
}
func (*UnimplementedMusicRPCServer) GetMyPlaylists(ctx context.Context, req *GetMyPlaylistsRequest) (*PlaylistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMyPlaylists not implemented")
}

func RegisterMusicRPCServer(s *grpc.Server, srv MusicRPCServer) {
	s.RegisterService(&_MusicRPC_serviceDesc, srv)
}

func _MusicRPC_GetPlaylistsByGenre_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlaylistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MusicRPCServer).GetPlaylistsByGenre(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1alpha.MusicRPC/GetPlaylistsByGenre",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MusicRPCServer).GetPlaylistsByGenre(ctx, req.(*GetPlaylistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MusicRPC_GetMyPlaylists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMyPlaylistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MusicRPCServer).GetMyPlaylists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1alpha.MusicRPC/GetMyPlaylists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MusicRPCServer).GetMyPlaylists(ctx, req.(*GetMyPlaylistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MusicRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1alpha.MusicRPC",
	HandlerType: (*MusicRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPlaylistsByGenre",
			Handler:    _MusicRPC_GetPlaylistsByGenre_Handler,
		},
		{
			MethodName: "GetMyPlaylists",
			Handler:    _MusicRPC_GetMyPlaylists_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "playlist/v1alpha/playlist.proto",
}
