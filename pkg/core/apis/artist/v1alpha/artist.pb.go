// Code generated by protoc-gen-go. DO NOT EDIT.
// source: artist/v1alpha/artist.proto

package v1alpha

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	v1alpha "github.com/pastel-lilac/clasick-api/pkg/core/apis/common/v1alpha"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Artist struct {
	Id                   uint32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	JacketPhoto          string               `protobuf:"bytes,3,opt,name=jacket_photo,json=jacketPhoto,proto3" json:"jacket_photo,omitempty"`
	DebutDate            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=debut_date,json=debutDate,proto3" json:"debut_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Artist) Reset()         { *m = Artist{} }
func (m *Artist) String() string { return proto.CompactTextString(m) }
func (*Artist) ProtoMessage()    {}
func (*Artist) Descriptor() ([]byte, []int) {
	return fileDescriptor_a63df4d62295b51d, []int{0}
}

func (m *Artist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Artist.Unmarshal(m, b)
}
func (m *Artist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Artist.Marshal(b, m, deterministic)
}
func (m *Artist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Artist.Merge(m, src)
}
func (m *Artist) XXX_Size() int {
	return xxx_messageInfo_Artist.Size(m)
}
func (m *Artist) XXX_DiscardUnknown() {
	xxx_messageInfo_Artist.DiscardUnknown(m)
}

var xxx_messageInfo_Artist proto.InternalMessageInfo

func (m *Artist) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Artist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Artist) GetJacketPhoto() string {
	if m != nil {
		return m.JacketPhoto
	}
	return ""
}

func (m *Artist) GetDebutDate() *timestamp.Timestamp {
	if m != nil {
		return m.DebutDate
	}
	return nil
}

type ArtistResponse struct {
	Artists              []*Artist `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ArtistResponse) Reset()         { *m = ArtistResponse{} }
func (m *ArtistResponse) String() string { return proto.CompactTextString(m) }
func (*ArtistResponse) ProtoMessage()    {}
func (*ArtistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a63df4d62295b51d, []int{1}
}

func (m *ArtistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArtistResponse.Unmarshal(m, b)
}
func (m *ArtistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArtistResponse.Marshal(b, m, deterministic)
}
func (m *ArtistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArtistResponse.Merge(m, src)
}
func (m *ArtistResponse) XXX_Size() int {
	return xxx_messageInfo_ArtistResponse.Size(m)
}
func (m *ArtistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ArtistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ArtistResponse proto.InternalMessageInfo

func (m *ArtistResponse) GetArtists() []*Artist {
	if m != nil {
		return m.Artists
	}
	return nil
}

// --- [GET] /artists/:genre_id --- //
type GetArtistsByGenreRequest struct {
	Field                *v1alpha.MustField `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	GenreId              uint32             `protobuf:"varint,2,opt,name=genre_id,json=genreId,proto3" json:"genre_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetArtistsByGenreRequest) Reset()         { *m = GetArtistsByGenreRequest{} }
func (m *GetArtistsByGenreRequest) String() string { return proto.CompactTextString(m) }
func (*GetArtistsByGenreRequest) ProtoMessage()    {}
func (*GetArtistsByGenreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a63df4d62295b51d, []int{2}
}

func (m *GetArtistsByGenreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetArtistsByGenreRequest.Unmarshal(m, b)
}
func (m *GetArtistsByGenreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetArtistsByGenreRequest.Marshal(b, m, deterministic)
}
func (m *GetArtistsByGenreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetArtistsByGenreRequest.Merge(m, src)
}
func (m *GetArtistsByGenreRequest) XXX_Size() int {
	return xxx_messageInfo_GetArtistsByGenreRequest.Size(m)
}
func (m *GetArtistsByGenreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetArtistsByGenreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetArtistsByGenreRequest proto.InternalMessageInfo

func (m *GetArtistsByGenreRequest) GetField() *v1alpha.MustField {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *GetArtistsByGenreRequest) GetGenreId() uint32 {
	if m != nil {
		return m.GenreId
	}
	return 0
}

func init() {
	proto.RegisterType((*Artist)(nil), "v1alpha.Artist")
	proto.RegisterType((*ArtistResponse)(nil), "v1alpha.ArtistResponse")
	proto.RegisterType((*GetArtistsByGenreRequest)(nil), "v1alpha.GetArtistsByGenreRequest")
}

func init() { proto.RegisterFile("artist/v1alpha/artist.proto", fileDescriptor_a63df4d62295b51d) }

var fileDescriptor_a63df4d62295b51d = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x41, 0x4f, 0xdb, 0x30,
	0x18, 0x5d, 0xda, 0xae, 0x5d, 0x9d, 0xb5, 0xd3, 0x7c, 0x59, 0x96, 0x1e, 0x96, 0xe6, 0x94, 0x1d,
	0x1a, 0x6b, 0xd9, 0x69, 0xda, 0x05, 0x0a, 0xa2, 0xe2, 0x80, 0x54, 0x22, 0x4e, 0x1c, 0x88, 0x9c,
	0xe4, 0x6b, 0x6a, 0x9a, 0xc4, 0x26, 0x76, 0x90, 0xf8, 0x0b, 0xfc, 0x6a, 0x54, 0x3b, 0xad, 0x04,
	0x88, 0x9b, 0xbf, 0xf7, 0x9e, 0xdf, 0xf7, 0x9e, 0x65, 0x34, 0xa3, 0x8d, 0x62, 0x52, 0x91, 0xc7,
	0x3f, 0xb4, 0x14, 0x5b, 0x4a, 0xcc, 0x18, 0x8a, 0x86, 0x2b, 0x8e, 0x47, 0x1d, 0xea, 0xfe, 0x2a,
	0x38, 0x2f, 0x4a, 0x20, 0x1a, 0x4e, 0xdb, 0x0d, 0x51, 0xac, 0x02, 0xa9, 0x68, 0x25, 0x8c, 0xd2,
	0x9d, 0x65, 0xbc, 0xaa, 0x78, 0x7d, 0xb4, 0x31, 0xa3, 0x21, 0xfd, 0x67, 0x0b, 0x0d, 0x4f, 0xb5,
	0x2f, 0x9e, 0xa2, 0x1e, 0xcb, 0x1d, 0xcb, 0xb3, 0x82, 0x49, 0xdc, 0x63, 0x39, 0xc6, 0x68, 0x50,
	0xd3, 0x0a, 0x9c, 0x9e, 0x67, 0x05, 0xe3, 0x58, 0x9f, 0xf1, 0x1c, 0x7d, 0xbd, 0xa7, 0xd9, 0x0e,
	0x54, 0x22, 0xb6, 0x5c, 0x71, 0xa7, 0xaf, 0x39, 0xdb, 0x60, 0xeb, 0x3d, 0x84, 0xff, 0x21, 0x94,
	0x43, 0xda, 0xaa, 0x24, 0xa7, 0x0a, 0x9c, 0x81, 0x67, 0x05, 0x76, 0xe4, 0x86, 0x26, 0x64, 0x78,
	0x08, 0x19, 0xde, 0x1c, 0x42, 0xc6, 0x63, 0xad, 0x3e, 0xa7, 0x0a, 0xfc, 0xff, 0x68, 0x6a, 0xb2,
	0xc4, 0x20, 0x05, 0xaf, 0x25, 0xe0, 0xdf, 0x68, 0x64, 0x5a, 0x4b, 0xc7, 0xf2, 0xfa, 0x81, 0x1d,
	0x7d, 0x0b, 0xbb, 0x1a, 0x61, 0xa7, 0x3c, 0xf0, 0x7e, 0x82, 0x9c, 0x15, 0x28, 0x83, 0xca, 0xe5,
	0xd3, 0x0a, 0xea, 0x06, 0x62, 0x78, 0x68, 0x41, 0x2a, 0x1c, 0xa0, 0xcf, 0x1b, 0x06, 0xa5, 0x69,
	0x67, 0x47, 0xf8, 0x68, 0x72, 0xd5, 0x4a, 0x75, 0xb1, 0x67, 0x62, 0x23, 0xc0, 0x3f, 0xd1, 0x97,
	0x62, 0x7f, 0x33, 0x61, 0xb9, 0x2e, 0x3e, 0x89, 0x47, 0x7a, 0xbe, 0xcc, 0xa3, 0x3b, 0x34, 0xee,
	0x76, 0xae, 0xcf, 0xf0, 0x35, 0xfa, 0xfe, 0x6e, 0x1b, 0x9e, 0x1f, 0x7d, 0x3f, 0x4a, 0xe2, 0xfe,
	0x78, 0x9b, 0xbf, 0x6b, 0xea, 0x7f, 0x5a, 0x2e, 0x6f, 0x4f, 0x0a, 0xa6, 0xb6, 0x6d, 0x1a, 0x66,
	0xbc, 0x22, 0x82, 0x4a, 0x05, 0xe5, 0xa2, 0x64, 0x25, 0xcd, 0x48, 0x56, 0x52, 0xc9, 0xb2, 0xdd,
	0x82, 0x0a, 0x46, 0xc4, 0xae, 0x20, 0x19, 0x6f, 0x80, 0x50, 0xc1, 0x24, 0x79, 0xfd, 0x45, 0xd2,
	0xa1, 0x7e, 0xe0, 0xbf, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x1d, 0xc6, 0x40, 0x3b, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ArtistRPCClient is the client API for ArtistRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ArtistRPCClient interface {
	GetArtistsByGenre(ctx context.Context, in *GetArtistsByGenreRequest, opts ...grpc.CallOption) (*ArtistResponse, error)
}

type artistRPCClient struct {
	cc *grpc.ClientConn
}

func NewArtistRPCClient(cc *grpc.ClientConn) ArtistRPCClient {
	return &artistRPCClient{cc}
}

func (c *artistRPCClient) GetArtistsByGenre(ctx context.Context, in *GetArtistsByGenreRequest, opts ...grpc.CallOption) (*ArtistResponse, error) {
	out := new(ArtistResponse)
	err := c.cc.Invoke(ctx, "/v1alpha.ArtistRPC/GetArtistsByGenre", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ArtistRPCServer is the server API for ArtistRPC service.
type ArtistRPCServer interface {
	GetArtistsByGenre(context.Context, *GetArtistsByGenreRequest) (*ArtistResponse, error)
}

// UnimplementedArtistRPCServer can be embedded to have forward compatible implementations.
type UnimplementedArtistRPCServer struct {
}

func (*UnimplementedArtistRPCServer) GetArtistsByGenre(ctx context.Context, req *GetArtistsByGenreRequest) (*ArtistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetArtistsByGenre not implemented")
}

func RegisterArtistRPCServer(s *grpc.Server, srv ArtistRPCServer) {
	s.RegisterService(&_ArtistRPC_serviceDesc, srv)
}

func _ArtistRPC_GetArtistsByGenre_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetArtistsByGenreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ArtistRPCServer).GetArtistsByGenre(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1alpha.ArtistRPC/GetArtistsByGenre",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ArtistRPCServer).GetArtistsByGenre(ctx, req.(*GetArtistsByGenreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ArtistRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1alpha.ArtistRPC",
	HandlerType: (*ArtistRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetArtistsByGenre",
			Handler:    _ArtistRPC_GetArtistsByGenre_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "artist/v1alpha/artist.proto",
}
